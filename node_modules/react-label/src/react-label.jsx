import React, { Component } from 'react';
import PropTypes from 'prop-types';

import reactLabelStyles from 'styles/main.css';

class ReactLabel extends Component {
  constructor(props) {
    super(props);
    this.state = {
      editMode: false,
    }
  }

  onEditModeEnter() {
    this.setState({
      editMode: true,
    });

    this.props.onEditModeEnter && this.props.onEditModeEnter();
  }

  onViewModeEnter() {
    this.setState({
      editMode: false,
    });

    this.props.onViewModeEnter && this.props.onViewModeEnter();
  }

  render() {
    const {
      value,

      saveButtonText,
      cancelButtonText,
      placeholder,

      disableView,
      disableEdit,
      showRejectButton,

      className,
      classNameViewPanel,
      classNameEditPanel,
      classNameInput,
      classNameSaveButton,
      classNameCancelButton,

      onChange,
      onFocusInput,
      onBlurInput,
      onSave,
      onCancel,
    } = this.props;

    const {
      editMode,
    } = this.state;

    return (
      <div className={ className || 'react-label' }>
        {
          !editMode ? (
            <div
              className={ classNameViewPanel || 'react-label__panel react-label__panel_view' }
              onClick={ !disableView ? this.onEditModeEnter.bind(this) : () => {} }
            >
              { value }
            </div>
          ) : (
            <div className={ classNameEditPanel || 'react-label__panel react-label__panel_edit' }>
              <input
                type='text'
                value={ value }
                className={ classNameInput || 'react-label__input' }
                onChange={ onChange && onChange.bind(this) }
                onFocus={ onFocusInput && onFocusInput.bind(this) }
                onBlur={ onBlurInput && onBlurInput.bind(this) }
                disabled={ disableEdit }
                placeholder={ placeholder }
              />

              {
                showRejectButton && (
                  <button
                    className={ classNameCancelButton || 'react-label__button react-label__button_cancel' }
                    onClick={() => {
                      onCancel && onCancel();
                      this.onViewModeEnter.call(this);
                    }}
                  >
                    { cancelButtonText }
                  </button>
                )
              }

              <button
                className={ classNameSaveButton || 'react-label__button react-label__button_save' }
                onClick={() => {
                  onSave && onSave();
                  this.onViewModeEnter.call(this);
                }}
              >
                { saveButtonText }
              </button>
            </div>
          )
        }
      </div>
    );
  }
}

ReactLabel.propTypes = {
  value: PropTypes.string.isRequired,
  saveButtonText: PropTypes.string,
  cancelButtonText: PropTypes.string,
  placeholder: PropTypes.string,
  disableView: PropTypes.bool,
  disableEdit: PropTypes.bool,
  showRejectButton: PropTypes.bool,
  className: PropTypes.string,
  classNameViewPanel: PropTypes.string,
  classNameEditPanel: PropTypes.string,
  classNameInput: PropTypes.string,
  classNameSaveButton: PropTypes.string,
  classNameCancelButton: PropTypes.string,
  onChange: PropTypes.func,
  onFocusInput: PropTypes.func,
  onBlurInput: PropTypes.func,
  onSave: PropTypes.func,
  onCancel: PropTypes.func,
  onEditModeEnter: PropTypes.func,
  onViewModeEnter: PropTypes.func,
};

export default ReactLabel;
